name: 多仓库更新检查

on:
  workflow_dispatch:
  schedule:
    - cron: '0 17 * * *'  # 中国时间每天凌晨1:00（UTC 17:00）

jobs:
  check-repos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 在此定义所有要监控的仓库配置
        repo_config:
          - id: immortalwrt
            url: https://github.com/immortalwrt/immortalwrt
            branch: master
            event: immortalwrt-update

          - id: immortalwrt-packages
            url: https://github.com/immortalwrt/packages
            branch: master
            event: immortalwrt-packages-update

          - id: luci-packages
            url: https://github.com/immortalwrt/luci
            branch: master
            event: immortalwrt-luci-update            
            
          - id: lede
            url: https://github.com/coolsnowwolf/lede
            branch: master
            event: lede-update
            
          - id: lede-luci
            url: https://github.com/coolsnowwolf/luci
            branch: master
            event: lede-luci-update

          - id: lede-packages
            url: https://github.com/coolsnowwolf/packages
            branch: master
            event: lede-packages-update


    steps:
    - name: 检查 ${{ matrix.repo_config.id }} 更新
      id: check-update
      run: |
        # 克隆目标仓库
        git clone --depth 1 ${{ matrix.repo_config.url }} -b ${{ matrix.repo_config.branch }} source-repo
        
        # 获取最新Commit Hash
        cd source-repo
        LATEST_HASH=$(git rev-parse HEAD)
        echo "最新提交: $LATEST_HASH"
        
        # 检查缓存目录
        CACHE_DIR="$HOME/.repo_cache/${{ matrix.repo_config.id }}"
        mkdir -p $CACHE_DIR
        CACHE_FILE="$CACHE_DIR/last_commit"
        
        # 检查是否有新提交
        if [[ -f "$CACHE_FILE" ]]; then
          CACHED_HASH=$(cat $CACHE_FILE)
          if [[ "$CACHED_HASH" == "$LATEST_HASH" ]]; then
            echo "::set-output name=has_update::false"
            echo "无新提交"
            exit 0
          fi
        fi
        
        # 检测到更新
        echo "$LATEST_HASH" > $CACHE_FILE
        echo "::set-output name=has_update::true"
        echo "检测到新提交!"
        
    - name: 触发构建
      if: steps.check-update.outputs.has_update == 'true'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
        event-type: ${{ matrix.repo_config.event }}
        client-payload: '{
          "repo_id": "${{ matrix.repo_config.id }}",
          "repo_url": "${{ matrix.repo_config.url }}",
          "commit_hash": "${{ steps.check-update.outputs.LATEST_HASH }}"
        }'